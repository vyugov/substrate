[package]
name = "substrate-badger-mushroom"
version = "2.0.0"
authors = ["Not me"]
edition = "2018"

[dependencies]
futures-timer = "2.0.2"
bytes = "0.4.12"
unsigned-varint = { version = "0.2.2", features = ["codec"] }
fork-tree = { path = "../../utils/fork-tree" }
futures03 = { package = "futures", version = "0.3.1", features = ["compat"] }
log = "0.4"
hash-db = { version = "0.15.2"}
parking_lot = "0.9.0"
jsonrpc-core = "14.0.3"
jsonrpc-core-client = "14.0.3"
jsonrpc-derive = "14.0.3"
tokio-executor = "0.1.7"
tokio-timer = "0.2.11"
rand = "0.6"
hex_fmt = "0.3.0"
threshold_crypto = {  git = "https://github.com/poanetwork/threshold_crypto", features = ["codec-support"],  default-features = false }
parity-codec = { package = "parity-scale-codec", version = "1.0.6", features = ["derive"] }
runtime_primitives = { package = "sp-runtime", path = "../../primitives/runtime" }
sp-blockchain = { package = "sp-blockchain", path = "../../primitives/blockchain" }
sp-api = { package = "sp-api", path = "../../primitives/api" }
txp = { package = "sp-transaction-pool", path = "../../primitives/transaction-pool" }

block_primitives = { package = "sp-block-builder", path = "../../primitives/block-builder" }
sp-std = { version = "2.0.0", default-features = false, path = "../../primitives/std" }

consensus_common = { package = "sp-consensus", path = "../../primitives/consensus/common/" }
substrate-primitives = {  package = "sp-core",path = "../../primitives/core" }
substrate-telemetry = { package = "sc-telemetry",path = "../telemetry" }
serde = { version = "1.0.102", features = ["derive"] }
serde_json = "1.0"
block-builder = { package = "sc-block-builder", path = "../block-builder" }
sc-network-ranting = { path = "../network-ranting"}

client = { package = "sc-client", path = "../../client/" }
inherents = { package = "sp-inherents", path = "../../primitives/inherents" }
network = { package = "sc-network", path = "../network" }
keystore = { package = "sc-keystore", path = "../keystore" }
service = { package = "sc-service", path = "../service", optional = true }
srml-finality-tracker = { package = "pallet-finality-tracker",path = "../../frame/finality-tracker" }
badger_primitives = { package = "substrate-badger-primitives", path = "../../primitives/hbbft" }
hex = "0.3.2"
badger = { package = "hbbft", path="../../../hbbft" }
bincode = "1.2.0"
transaction_pool = { package = "sc-transaction-pool", path = "../../client/transaction-pool" }
num = { package = "num-traits", version = "0.2", default-features = false }
srml-timestamp = {  package = "pallet-timestamp",path = "../../frame/timestamp" }
sp-timestamp = {  package = "sp-timestamp",path = "../../primitives/timestamp" }

serde_bytes = "0.11"
derive_more = "0.15"
state_machine = { package = "sp-state-machine", path = "../../primitives/state-machine" }
app-crypto = { package = "sp-application-crypto", path = "../../primitives/application-crypto" }
hex-literal = { version = "0.2.1" }
sc-api={ package = "sc-client-api", path = "../api" }
sc-peerid-wrapper = { package = "sc-peerid-wrapper", path = "../../client/peeridw" }


[dev-dependencies]
network = { package = "sc-network", path = "../network", features = ["test-helpers"] }
keyring = { package = "sp-keyring", path = "../../primitives/keyring" }
test-client = { package = "substrate-test-runtime-client", path = "../../test-utils/runtime/client"}

env_logger = "0.6"
tokio = "0.1.17"


[features]
default = ["std"]
std=[]